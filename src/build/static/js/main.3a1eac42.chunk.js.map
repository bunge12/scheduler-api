{"version":3,"sources":["components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Show.js","components/Appointment/Empty.js","components/Button.js","components/InterviewerListItem.js","components/InterviewList.js","components/Appointment/Form.js","components/Appointment/Status.js","components/Appointment/Confirm.js","components/Appointment/Error.js","components/Appointment/index.js","hooks/useVisualMode.js","helpers/selectors.js","components/Application.js","hooks/useApplicationData.js","index.js"],"names":["classNames","require","DayListItem","props","number","dayClass","selected","spots","className","onClick","setDay","name","data-testid","DayList","days","map","day","key","id","Header","time","Show","student","interviewer","src","alt","onEdit","onDelete","onAdd","Button","buttonClass","button","confirm","danger","disabled","children","InterviewerListItem","itemClass","interviewers__item","setInterviewer","avatar","InterviewList","interviewers","value","event","onChange","Form","useState","setName","error","setError","autoComplete","onSubmit","preventDefault","type","placeholder","target","onCancel","onSave","Status","message","Confirm","onConfirm","Error","onClose","Appointment","initial","mode","setMode","history","setHistory","transition","newMode","replace","prev","back","length","pop","lastItem","useVisualMode","interview","save","bookInterview","then","catch","cancelInterview","getInterview","state","path","Application","appointments","setState","useEffect","Promise","all","resolve","axios","get","data","appointment","put","res","forEach","item","appointmentsArray","appointmentId","find","element","x","newSpots","delete","useApplicationData","found","person","getInterviewersForDay","appt","getAppointmentsForDay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a1eac42.chunk.js","sourcesContent":["import React from \"react\";\nimport \"components/DayListItem.scss\";\nconst classNames = require(\"classnames\");\n\nexport default function DayListItem(props) {\n  const formatSpots = number => {\n    if (number >= 2) return `${number} spots remaining`;\n    if (number === 1) return \"1 spot remaining\";\n    if (number === 0) return \"no spots remaining\";\n  };\n\n  const dayClass = classNames({\n    \"day-list__item\": true,\n    \"day-list__item--selected\": props.selected,\n    \"day-list__item--full\": props.spots === 0\n  });\n\n  return (\n    <li\n      className={dayClass}\n      onClick={() => props.setDay(props.name)}\n      data-testid=\"day\"\n    >\n      <h2 className=\"text--regular\">{props.name}</h2>\n      <h3 className=\"text--light\">{formatSpots(props.spots)}</h3>\n    </li>\n  );\n}\n","import React from \"react\";\nimport DayListItem from \"./DayListItem\";\n\nexport default function DayList(props) {\n  const result = props.days.map(day => {\n    return (\n      <DayListItem\n        key={day.id}\n        name={day.name}\n        spots={day.spots}\n        selected={day.name === props.day}\n        setDay={props.setDay}\n      />\n    );\n  });\n\n  return result;\n}\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Show(props) {\n  return (\n    <main className=\"appointment__card appointment__card--show\">\n      <section className=\"appointment__card-left\">\n        <h2 className=\"text--regular\">{props.student}</h2>\n        <section className=\"interviewer\">\n          <h4 className=\"text--light\">Interviewer</h4>\n          <h3 className=\"text--regular\">{props.interviewer.name}</h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={props.onEdit}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={props.onDelete}\n          />\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n  );\n}\n","import React from \"react\";\n\nimport \"components/Button.scss\";\n\nconst classNames = require(\"classnames\");\n\nexport default function Button(props) {\n  let buttonClass = classNames({\n    button: true,\n    \"button--confirm\": props.confirm,\n    \"button--danger\": props.danger\n  });\n\n  return (\n    <button\n      className={buttonClass}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport \"components/InterviewerListItem.scss\";\nconst classNames = require(\"classnames\");\n\nexport default function InterviewerListItem(props) {\n  let itemClass = classNames({\n    interviewers__item: true,\n    \"interviewers__item--selected\": props.selected\n  });\n\n  return (\n    <li\n      key={props.id}\n      className={itemClass}\n      selected={props.selected}\n      onClick={props.setInterviewer}\n    >\n      <img\n        className=\"interviewers__item-image\"\n        src={props.avatar}\n        alt={props.name}\n      />\n      {props.selected && props.name}\n    </li>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"components/InterviewList.scss\";\nimport InterviewListItem from \"./InterviewerListItem\";\n\nInterviewList.propTypes = {\n  value: PropTypes.number,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default function InterviewList(props) {\n  return (\n    <section className=\"interviewers\">\n      <h4 className=\"interviewers__header text--light\">Interviewer</h4>\n      <ul className=\"interviewers__list\">\n        {props.interviewers.map(value => {\n          return (\n            <InterviewListItem\n              key={value.id}\n              name={value.name}\n              avatar={value.avatar}\n              selected={value.id === props.value}\n              setInterviewer={event => {\n                props.onChange(value.id);\n              }}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"../Button\";\nimport InterviewerList from \"../InterviewList\";\n\nexport default function Form(props) {\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [name, setName] = useState(props.name || \"\");\n  const [error, setError] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n    setInterviewer(null);\n  };\n\n  const cancel = () => {\n    props.onCancel();\n    reset();\n  };\n\n  const validate = () => {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    } else if (interviewer === null) {\n      setError(\"Interviewer must be selected to proceed!\");\n      return;\n    }\n    setError(\"\");\n    props.onSave(name, interviewer);\n  };\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            data-testid=\"student-name-input\"\n            value={name}\n            onChange={event => {\n              setName(event.target.value);\n            }}\n          />\n        </form>\n        <section className=\"appointment__validation\">{error}</section>\n        <InterviewerList\n          interviewers={props.interviewers}\n          value={interviewer}\n          onChange={setInterviewer}\n        />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button onClick={cancel} danger>\n            Cancel\n          </Button>\n          <Button onClick={validate} confirm>\n            Save\n          </Button>\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Status(props) {\n  return (\n    <main className=\"appointment__card appointment__card--status\">\n      <img\n        className=\"appointment__status-image\"\n        src=\"images/status.png\"\n        alt=\"Loading\"\n      />\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n    </main>\n  );\n}\n","import React from \"react\";\nimport Button from \"../Button\";\n\nexport default function Confirm(props) {\n  return (\n    <main className=\"appointment__card appointment__card--confirm\">\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n      <section className=\"appointment__actions\">\n        <Button danger onClick={props.onCancel}>\n          Cancel\n        </Button>\n        <Button danger onClick={props.onConfirm}>\n          Confirm\n        </Button>\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport default function Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\";\nimport Status from \"./Status\";\nimport Confirm from \"./Confirm\";\nimport Error from \"./Error\";\n\nimport \"components/Appointment/style.scss\";\nimport useVisualMode from \"../../hooks/useVisualMode\";\nconst EMPTY = \"EMPTY\";\nconst SHOW = \"SHOW\";\nconst CREATE = \"CREATE\";\nconst SAVING = \"SAVING\";\nconst ERROR_SAVE = \"ERROR_SAVE\";\nconst DELETING = \"DELETING\";\nconst ERROR_DELETE = \"ERROR_DELETE\";\nconst CONFIRM = \"CONFIRM\";\nconst EDIT = \"EDIT\";\n\nexport default function Appointment(props) {\n  const interviewers = props.interviewers;\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n\n  const save = (name, interviewer) => {\n    transition(SAVING);\n\n    const interview = {\n      student: name,\n      interviewer\n    };\n\n    props\n      .bookInterview(props.id, interview)\n      .then(() => {\n        transition(SHOW);\n      })\n      .catch(() => {\n        transition(ERROR_SAVE, true);\n      });\n  };\n\n  const edit = () => {\n    transition(EDIT);\n  };\n  const remove = () => {\n    transition(CONFIRM);\n  };\n  const confirm = () => {\n    transition(DELETING, true);\n    props\n      .cancelInterview(props.id)\n      .then(() => {\n        transition(EMPTY);\n      })\n      .catch(() => {\n        transition(ERROR_DELETE, true);\n      });\n  };\n\n  return (\n    <article\n      className=\"appointment\"\n      id={props.id}\n      key={props.id}\n      data-testid=\"appointment\"\n    >\n      <Header time={props.time} />\n      {mode === SAVING && <Status message=\"Saving...\" />}\n      {mode === DELETING && <Status message=\"Deleting...\" />}\n      {mode === ERROR_DELETE && (\n        <Error message=\"Error deleting...\" onClose={back} />\n      )}\n      {mode === ERROR_SAVE && (\n        <Error message=\"Error SAVING...\" onClose={back} />\n      )}\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === CONFIRM && (\n        <Confirm\n          message=\"Are you sure you want to do this?\"\n          onCancel={back}\n          onConfirm={confirm}\n        />\n      )}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n          onDelete={remove}\n          onEdit={edit}\n        />\n      )}\n      {mode === CREATE && (\n        <Form interviewers={interviewers} onCancel={back} onSave={save} />\n      )}\n      {mode === EDIT && (\n        <Form\n          interviewers={interviewers}\n          onCancel={back}\n          interviewer={props.interview.interviewer.id}\n          name={props.interview.student}\n          onSave={save}\n        />\n      )}\n    </article>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useVisualMode(initial) {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n  const transition = (newMode, replace) => {\n    if (replace) {\n      setMode(newMode);\n      setHistory((prev) => history);\n    } else {\n      setHistory((prev) => [...history, newMode]);\n      setMode(newMode);\n    }\n  };\n\n  const back = () => {\n    if (history.length > 1) {\n      history.pop();\n      const lastItem = history[history.length - 1];\n      setMode(lastItem);\n      setHistory(history);\n    }\n  };\n  return { mode, transition, back };\n}\n","export default function getAppointmentsForDay(state, day) {\n  const found = state.days.find((element) => element.name === day);\n  return found\n    ? found.appointments.map((appt) => state.appointments[appt])\n    : [];\n}\n\nexport const getInterviewersForDay = (state, day) => {\n  const found = state.days.find((element) => element.name === day);\n  return found\n    ? found.interviewers.map((person) => state.interviewers[person])\n    : [];\n};\n\nexport const getInterview = (state, interview) => {\n  if (interview) {\n    const path = state.interviewers[interview.interviewer];\n\n    return {\n      interviewer: {\n        id: interview.interviewer,\n        name: path.name,\n        avatar: path.avatar,\n      },\n      student: interview.student,\n    };\n  } else return null;\n};\n","import React from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"./Appointment\";\nimport getAppointmentsForDay from \"../helpers/selectors\";\nimport useApplicationData from \"hooks/useApplicationData\";\nimport { getInterview, getInterviewersForDay } from \"../helpers/selectors\";\n\nimport \"components/Application.scss\";\n\nexport default function Application(props) {\n  const {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  } = useApplicationData();\n\n  const interviewers = getInterviewersForDay(state, state.day);\n\n  const appointments = getAppointmentsForDay(state, state.day).map(\n    appointment => {\n      return (\n        <Appointment\n          key={appointment.id}\n          {...appointment}\n          interview={getInterview(state, appointment.interview)}\n          interviewers={interviewers}\n          bookInterview={bookInterview}\n          cancelInterview={cancelInterview}\n        />\n      );\n    }\n  );\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        <section className=\"schedule\">\n          {appointments}\n          <Appointment key=\"last\" time=\"5pm\" />\n        </section>\n      </section>\n    </main>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useApplicationData() {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    interviewers: {},\n    appointments: {},\n  });\n\n  useEffect(() => {\n    Promise.all([\n      Promise.resolve(axios.get(\"/api/days\")),\n      Promise.resolve(axios.get(\"/api/appointments\")),\n      Promise.resolve(axios.get(\"/api/interviewers\")),\n    ]).then((all) => {\n      setState((prev) => ({\n        day: \"Monday\",\n        days: all[0].data,\n        interviewers: all[2].data,\n        appointments: all[1].data,\n      }));\n    });\n  }, []);\n\n  const bookInterview = (id, interview) => {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview },\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    return axios.put(`/api/appointments/${id}`, appointment).then((res) => {\n      state.days.forEach((item) => {\n        const appointmentsArray = item.appointments;\n        const appointmentId = state.appointments[id].id;\n        const found = appointmentsArray.find(\n          (element) => element === appointmentId\n        );\n        if (typeof found !== \"undefined\") {\n          const x = item.id - 1;\n          const newSpots = !state.appointments[id].interview\n            ? state.days[x].spots - 1\n            : state.days[x].spots;\n          const day = {\n            ...state.days[x],\n            spots: newSpots,\n          };\n          const days = [...state.days];\n          days[x] = day;\n          setState((prev) => ({ ...state, appointments, days }));\n        }\n      });\n    });\n  };\n  const cancelInterview = (id) => {\n    const appointment = {\n      ...state.appointments[id],\n      interview: null,\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    return axios.delete(`/api/appointments/${id}`).then((res) => {\n      state.days.forEach((item) => {\n        const appointmentsArray = item.appointments;\n        const appointmentId = state.appointments[id].id;\n        const found = appointmentsArray.find(\n          (element) => element === appointmentId\n        );\n        if (typeof found !== \"undefined\") {\n          const x = item.id - 1;\n          const newSpots = state.days[x].spots + 1;\n          const day = {\n            ...state.days[x],\n            spots: newSpots,\n          };\n          const days = [...state.days];\n          days[x] = day;\n          setState((prev) => ({ ...state, appointments, days }));\n        }\n      });\n    });\n  };\n\n  const setDay = (day) => setState({ ...state, day });\n\n  return { state, setDay, bookInterview, cancelInterview };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}